setwd('~/Documents/R/Zahid_Test_Plot/')
rm(list = ls())
load('genera_191218.RData')
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(cluster)
library(mclust)
library(ggplot2)
library(factoextra)
setwd('~/Documents/R/Zahid_Test_Plot/')
rm(list = ls())
load('genera_191218.RData')
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(cluster)
library(mclust)
library(ggplot2)
library(factoextra)
plot(1:10)
library(FactoMineR)
library(factoextra)
library(FactoMineR)
# PCA ---------------------------------------------------------------------
PCA(data_Genus)
data_Genus
PCA(t(data_Genus))
# PCA ---------------------------------------------------------------------
PCA(t(data_Genus))
PCA(data_Genus)
dim(data_Genus)
# PCA ---------------------------------------------------------------------
PCA(t(data_Genus))
# PCA ---------------------------------------------------------------------
result_pca <- PCA(t(data_Genus))
get_eig(result_pca)
get_eigenvalue(result_pca)
result_pca$eig
result_pca$var
dim(df)
# PCA ---------------------------------------------------------------------
df <- t(data_Genus)
dim(df)
result_pca <- PCA(df)
result_pca$eig
result_pca$var
result_pca
dim(df)
df <- data_Genus
#
dim(df)
result_pca <- PCA(df)
result_pca$eig
result_pca$var
result_pca$var
result_pca
fviz_pca_biplot(df)
fviz_pca_biplot(result_pca)
df <- data_Genus
result_pca <- PCA(df)
result_pca$eig
result_pca$var
fviz_pca_biplot(result_pca)
# PCA ---------------------------------------------------------------------
df <- t(data_Genus)
#
dim(df)
result_pca <- PCA(df)
result_pca$eig
result_pca$var
fviz_pca_biplot(result_pca)
fviz_screeplot(result_pca)
result_pca$ind
result_pca$ind
result_pca
dim(df)
result_pca$var$coord
result_pca$ind$contrib
result_pca$call
result_pca$var$contrib
result_pca$var$cor
fviz_pca_biplot(result_pca)
fviz_pca_var(result_pca)
fviz_pca_ind(result_pca)
fviz_pca_biplot(result_pca)
fviz_pca_var(result_pca)
fviz_pca_ind(result_pca)
fviz_pca_biplot(result_pca)
result_pca$var
colSums(result_pca$var$contrib)
colSums(result_pca$ind$contrib)
result_pca$ind$contrib
result_pca$ind$contrib
image(result_pca$ind$contrib)
heatmap(result_pca$ind$contrib)
fviz_pca_var(result_pca)
fviz_pca_ind(result_pca)
dim(df)
fviz_pca_var(result_pca, col.var = 'contrib')
fviz_pca_ind(result_pca, col.ind = 'contrib')
fviz_pca_ind(result_pca, col.ind = 'contrib',    gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
fviz_pca_biplot(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
fviz_pca_biplot(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = T)
head(df)
df['Legionella',]
df[c('Legionella', 'Nitrospira', 'Hassallia', 'Thauera'),]
dim(df)
dim(data_Genus)
df[c('Legionella', 'Nitrospira', 'Hassallia', 'Thauera'),]
fviz_pca_biplot(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = T)
df[c('Legionella', 'Nitrospira', 'Hassallia', 'Thauera'),]
df[c('Legionella', 'Hassallia',
'Nitrospira', 'Thauera'),]
fviz_contrib(result_pca)
dim(df)
fviz_contrib(result_pca, choice = 'ind')
fviz_contrib(result_pca, choice = 'ind', axis = 1, top = 10)
fviz_contrib(result_pca, choice = 'ind', axis = 2, top = 10)
fviz_contrib(result_pca, choice = 'var', axis = 2, top = 10)
fviz_contrib(result_pca, choice = 'var', axis = 1, top = 10)
fviz_contrib(result_pca, choice = 'var', axes = 2, top = 10)
fviz_contrib(result_pca, choice = 'var', axes = 1, top = 10)
fviz_contrib(result_pca, choice = 'ind', axes = 1, top = 10)
fviz_contrib(result_pca, choice = 'ind', axes = 2, top = 10)
fviz_contrib(result_pca, choice = 'ind', axes = 1, top = 10)
fviz_contrib(result_pca, choice = 'ind', axes = 2, top = 10)
fviz_pca_ind(result_pca, col.ind = 'cos2',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
fviz_pca_biplot(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = T)
fviz_pca_var(result_pca, col.var = 'contrib')
fviz_pca_ind(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
fviz_pca_biplot(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = T)
dim(df)
# Model-Based Clustering --------------------------------------------------
df <- t(data_Genus)
result_mclust <- mclust::Mclust(data = df)
# BIC values used for choosing the number of clusters
{
fviz_mclust(result_mclust, "BIC", palette = 'jco')
ggsave('Model-Based Clustering Model Selection.pdf')
}
library(ape)
library(vegan)
library(plyr)
library(dplyr)
library(cluster)
library(mclust)
library(factoextra)
library(FactoMineR)
# Model-Based Clustering --------------------------------------------------
df <- t(data_Genus)
result_mclust <- mclust::Mclust(data = df)
# BIC values used for choosing the number of clusters
{
fviz_mclust(result_mclust, "BIC", palette = 'jco')
ggsave('Model-Based Clustering Model Selection.pdf')
}
# Classification (clustering) plot with uncertainty
{
fviz_cluster(
result_mclust, data = df,
geom = 'point', what = 'uncertainty', stand = F,
ellipse.type = 'convex', show.clust.cent = T, ggtheme = theme_minimal(),
main = 'Model-Based Cluster Plot', palette = 'jco'
) +
theme(legend.position = c(.1, .25))
#
ggsave('Model-Based Clustering Results.pdf')
}
# DBSCAN ------------------------------------------------------------------
result_dbscan <- fpc::dbscan(df, eps = 1, MinPts = 3, scale = T)
fviz_cluster(object = result_dbscan,
data = data.frame(df),
geom = 'point', what = "uncertainty", stand = F,
ellipse.type = 'convex', show.clust.cent = T,
ggtheme = theme_minimal(), main = 'DBSCAN Cluster Plot',
palette = RColorBrewer::brewer.pal(8, 'Dark2')) +
theme(legend.position = c(.9,.8))
ggsave('DBSCAN.pdf')
# -------------------------------------------------------------------------
df_clust <- data.frame(df,
cluster_mclust = result_mclust$classification,
cluster_dbscan = result_dbscan$cluster)
df_clust[order(df_clust$cluster_mclust),]
df_clust[order(df_clust$cluster_dbscan),]
# PCA ---------------------------------------------------------------------
df <- t(data_Genus)
fviz_pca_ind(result_pca,
# label = "none", # hide individual labels
habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
fviz_pca_ind(result_pca,
label = "none", # hide individual labels
# habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
dim(df)
dim(df_clust)
fviz_pca_ind(PCA(df_clust),
label = "none", # hide individual labels
habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
PCA(df_clust)
fviz_pca_ind(result_pca,
label = "none", # hide individual labels
habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
fviz_pca_ind(result_pca,
# label = "none", # hide individual labels
habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
df_clust$cluster_mclust
result_pca
fviz_pca_ind(result_pca,
label = "none", # hide individual labels
# habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
fviz_pca_ind(result_pca,
# label = "none", # hide individual labels
# habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
fviz_pca_ind(result_pca,
label = "none", # hide individual labels
# habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
result_pca
fviz_pca_ind(result_pca,
label = "none", # hide individual labels
# habillage = df_clust$cluster_mclust, # color by groups
palette = c("#00AFBB", "#E7B800", "#FC4E07"),
addEllipses = TRUE # Concentration ellipses
)
df[c('Legionella', 'Hassallia',
'Nitrospira', 'Thauera'),]
fviz_contrib(result_pca, choice = 'ind', axes = 1, top = 10)
fviz_contrib(result_pca, choice = 'ind', axes = 2, top = 10)
result_ca <- CA(df)
result_ca$eig
fviz_ca_biplot(result_ca)
fviz_ca_biplot(result_ca, repel = T)
fviz_ca_row(result_ca)
fviz_contrib(result_ca)
fviz_contrib(result_ca, top = 10)
fviz_contrib(result_ca, axes = 1, top = 10)
fviz_contrib(result_ca, axes = 1, top = 12)
fviz_contrib(result_ca, axes = 1, top = 1)
fviz_contrib(result_ca, axes = 1, top = 20)
MCA(df)
result_mca <- MCA(df, quali.sup = 1:2, quali.sup = 3:4)
psych::describe(df)
scale(df)
fviz_cluster(object = result_dbscan,
data = data.frame(df),
geom = 'point', what = "uncertainty", stand = F,
ellipse.type = 'convex', show.clust.cent = T,
ggtheme = theme_minimal(), main = 'DBSCAN Cluster Plot',
palette = RColorBrewer::brewer.pal(8, 'Dark2')) +
theme(legend.position = c(.9,.8))
fviz_cluster(
result_mclust, data = df,
geom = 'point', what = 'uncertainty', stand = F,
ellipse.type = 'convex', show.clust.cent = T, ggtheme = theme_minimal(),
main = 'Model-Based Cluster Plot', palette = "jco"
) +
theme(legend.position = c(.1, .25))
fviz_cluster(
result_mclust, data = scale(df),
geom = 'point', what = 'uncertainty', stand = F,
ellipse.type = 'convex', show.clust.cent = T, ggtheme = theme_minimal(),
main = 'Model-Based Cluster Plot', palette = "jco"
) +
theme(legend.position = c(.1, .25))
df_clust %>% View
df <- data_Genus
Mclust(df)
Mclust(df) %>% fviz_mclust_bic()
Mclust(df) %>% fviz_cluster()
Mclust(df) %>% fviz_cluster(ggtheme = theme_minimal())
Mclust(df) %>% fviz_mclust_bic()
Mclust(df) %>% fviz_cluster(ggtheme = theme_minimal())
Mclust(df) %>% fviz_mclust_bic()
fviz_pca_biplot(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = T)
fviz_pca_biplot(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = T)
df[c('Legionella', 'Hassallia',
'Nitrospira', 'Thauera'),]
# df <- data_Genus
#
dim(df)
df[c('Legionella', 'Hassallia',
'Nitrospira', 'Thauera'),]
# PCA ---------------------------------------------------------------------
# Principal Components Analysis
df <- t(data_Genus)
df[c('Legionella', 'Hassallia',
'Nitrospira', 'Thauera'),]
# CA ----------------------------------------------------------------------
# Correspondence Analysis
df <- t(data_Genus)
result_ca <- CA(df)
fviz_ca_biplot(result_ca, repel = T)
fviz_contrib(result_ca, axes = 1, top = 20)
fviz_contrib(result_ca, axes = 2, top = 10)
fviz_contrib(result_ca, axes = 1, top = 10)
result_mca <- MCA(df, quali.sup = 1:2, quali.sup = 3:4)
# PCoA --------------------------------------------------------------------
#
result_dist <- vegdist(df, 'jaccard')
result_pcoa <- cmdscale(result_dist, k = (nrow(df)-1), eig = T)
# pcoa(result_dist, correction = 'lingoes')
ordiplot(scores(result_pcoa, choices = 1:2), type = 't')
biplot.pcoa(result_pcoa)
result_pcoa <- cmdscale(result_dist, k = (nrow(df)-1), eig = T)
biplot.pcoa(result_pcoa)
pcoa(result_dist, correction = 'lingoes')
biplot.pcoa(result_pcoa)
result_dist <- vegdist(df, 'jaccard')
result_pcoa <- cmdscale(result_dist, k = (nrow(df)-1), eig = T)
pcoa(result_dist, correction = 'lingoes')
ordiplot(scores(result_pcoa, choices = 1:2), type = 't')
biplot.pcoa(result_pcoa)
ordiplot(scores(result_pcoa, choices = 1:2), type = 't')
pcoa(result_dist, correction = 'lingoes')
pcoa(result_dist, correction = 'lingoes')
result_pcoa <- cmdscale(result_dist, k = (nrow(df)-1), eig = T)
# pcoa(result_dist, correction = 'lingoes')
ordiplot(scores(result_pcoa, choices = 1:2), type = 't')
biplot.pcoa(pcoa(result_dist))
# PCA ---------------------------------------------------------------------
# Principal Components Analysis
df <- t(data_Genus)
# df <- data_Genus
#
dim(df)
result_pca <- PCA(df)
result_pca$eig
result_pca$var
result_pca$ind
fviz_screeplot(result_pca)
fviz_pca_var(result_pca, col.var = 'contrib')
fviz_pca_ind(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"))
fviz_pca_biplot(result_pca, col.ind = 'contrib',
gradient.cols = c("#00AFBB", "#E7B800", "#FC4E07"),
repel = T)
fviz_ca_biplot(result_ca, repel = T)
fviz_contrib(result_pca, choice = 'ind', axes = 1, top = 10)
fviz_contrib(result_ca, axes = 1, top = 10)
fviz_contrib(result_ca, axes = 2, top = 10)
fviz_contrib(result_pca, choice = 'ind', axes = 1, top = 10)
df[c('Legionella', 'Hassallia',
'Nitrospira', 'Thauera'),]
# CA ----------------------------------------------------------------------
# Correspondence Analysis
df <- t(data_Genus)
result_ca <- CA(df)
fviz_ca_biplot(result_ca, repel = T)
fviz_contrib(result_ca, axes = 1, top = 10)
fviz_contrib(result_ca, axes = 2, top = 10)
fviz_ca_biplot(result_ca, repel = T)
# Clustering --------------------------------------------------------------
# Model-Based Clustering --------------------------------------------------
df <- t(data_Genus)
result_mclust <- mclust::Mclust(data = df)
fviz_mclust(result_mclust, "BIC", palette = 'jco')
fviz_cluster(
result_mclust, data = df,
geom = 'point', what = 'uncertainty', stand = F,
ellipse.type = 'convex', show.clust.cent = T, ggtheme = theme_minimal(),
main = 'Model-Based Cluster Plot', palette = "jco"
) +
theme(legend.position = c(.1, .25))
# DBSCAN ------------------------------------------------------------------
result_dbscan <- fpc::dbscan(df, eps = 1, MinPts = 3, scale = T)
fviz_cluster(object = result_dbscan,
data = data.frame(df),
geom = 'point', what = "uncertainty", stand = F,
ellipse.type = 'convex', show.clust.cent = T,
ggtheme = theme_minimal(), main = 'DBSCAN Cluster Plot',
palette = RColorBrewer::brewer.pal(8, 'Dark2')) +
theme(legend.position = c(.9,.8))
fviz_ca_biplot(result_ca, repel = T)
biplot.pcoa(pcoa(result_dist))
fviz_ca_biplot(result_ca, repel = T)
biplot.pcoa(pcoa(result_dist))
# pcoa(result_dist, correction = 'lingoes')
ordiplot(scores(result_pcoa, choices = 1:2), type = 't')
# MFA ---------------------------------------------------------------------
# Multiple Factor Analysis
df <- t(data_Genus)
result_mfa <- MFA(df)
head(df)
melt(df)
reshape2::melt(df)
reshape2::melt(df)
df <- reshape2::melt(df)
head(df)
colnames(df)
head(data_Genus)
colnames(df)
head(df)
colnames(df) <- c('Genus', 'Sample', 'Relative_Abundance')
df$Sample
df$Sample[df$Sample%in%c('S1', 'S2')]
df$Sample[df$Sample%in%c('S1', 'S2')] <- 'S'
df$Sample[df$Sample%in%c('S1', 'S2')] <- factor('S')
df <- t(data_Genus)
df <- reshape2::melt(df)
colnames(df) <- c('Genus', 'Sample', 'Relative_Abundance')
labels(df$Sample)
levels(df$Sample)
(df$Sample)
levels(df) <- c('S', 'S', 'B', 'B')
gsub(pattern = c('S1', 'S2'), replacement = 'S', df$Sample)
df$Sample[df$Sample%in%c('S1', 'S2')]
df$Sample[df$Sample%in%c('S1', 'S2')] <- 'S'
gsub(pattern = c('S1'), replacement = 'S', df$Sample)
gsub(pattern = c('S2'), replacement = 'S', df$Sample)
# MFA ---------------------------------------------------------------------
# Multiple Factor Analysis
df <- t(data_Genus)
df <- reshape2::melt(df)
colnames(df) <- c('Genus', 'Sample', 'Relative_Abundance')
gsub(pattern = c('S1'), replacement = 'S', df$Sample)
gsub(pattern = c('S2'), replacement = 'S', df$Sample)
df$Sample[df$Sample%in%c('S1', 'S2')]
df$Sample[df$Sample%in%c('B1', 'B2')] <- 'B'
df
df
dim(df)
df
as.factor('S')
df$Sample[df$Sample%in%c('S1', 'S2')] <- as.factor('S')
df <- t(data_Genus)
df <- reshape2::melt(df)
colnames(df) <- c('Genus', 'Sample', 'Relative_Abundance')
levels(df$Sample)
levels(df$Sample) <- c('S', 'S', 'B', 'B')
levels(df$Sample)
# MFA ---------------------------------------------------------------------
# Multiple Factor Analysis
df <- t(data_Genus)
df <- reshape2::melt(df)
colnames(df) <- c('Genus', 'Sample', 'Relative_Abundance')
levels(df$Sample) <- c('S', 'S', 'B', 'B')
df
df
result_mfa <- MFA(df, group = df$Sample)
df$Genus
# MFA ---------------------------------------------------------------------
# Multiple Factor Analysis
df <- t(data_Genus)
df
df
data("poison")
dim(poison)
poinson
poison
poison
# MFA ---------------------------------------------------------------------
# Multiple Factor Analysis
df <- t(data_Genus)
df <- reshape2::melt(df)
colnames(df) <- c('Genus', 'Sample', 'Relative_Abundance')
result_mfa <- MFA(df, group = df$Sample)
dim(poison)
View(poison)
data(wine)
View(wine)
res.mfa <- MFA(wine, group=c(2,5,3,10,9,2), type=c("n",rep("s",5)),
ncp=5, name.group=c("orig","olf","vis","olfag","gust","ens"),
num.group.sup=c(1,6), graph=FALSE)
res.mfa
res.mfa$group
colnames(wine)
result_mfa <- MFA(df, group = c)
result_mfa <- MFA(df, group = 2)
dim(df)
head(df)
result_mfa <- MFA(df, group = 2)
result_mfa <- MFA(df, group = 2, 'Sample')
