if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 3,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.5)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.5)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
dev.off()
dev.off()
# Initialization ----------------------------------------------------------
library(dplyr)
library(ggplot2)
library(runjags)
setwd("/Users/chengt/Documents/R/MBR_Ecology/")
load('MBR_Yasmeen.RData')
#
# To avoid warning
# In runjags.summaries(fullmcmclist = mcmc, thinnedmcmclist = thinnedmcmc,  :
# An unexpected error occured while calculating the mode
runjags.options(silent.jags = F, silent.runjags = F,
mode.continuous = T,
inits.warning = T, rng.warning = T, summary.warning = T,
blockcombine.warning = T, blockignore.warning = T,
tempdir.warning = T, nodata.warning = T)
# Exploration -------------------------------------------------------------
colnames(Species_Yasmeen)
# category:     1:7     ;
# sample:       8:25    ;
# Species_Yasmeen <- arrange(
#     Species_Yasmeen, Phylum, Class, Order, Family, Genus, Species)
# Species_Yasmeen <- filter(Species_Yasmeen, !is.na(.data$Species))
# Species_Yasmeen <- Species_Yasmeen[Species_Yasmeen$Kingdom!='Unassigned', ]
# Species_Yasmeen <- Species_Yasmeen[Species_Yasmeen$Phylum!='p__', ]
# Species_Yasmeen <- Species_Yasmeen[Species_Yasmeen$Class!='c__', ]
#
if(0){
# now, no NA among KPCOFGS
# no p__ in Phylum
# no c__ in Class
sort(unique(Species_Yasmeen$Kingdom))
sort(unique(Species_Yasmeen$Phylum))
100 * colSums(filter(Species_Yasmeen, .data$Phylum == 'p__')[8:25])/
colSums(Species_Yasmeen[8:25])
sort(unique(Species_Yasmeen$Class))
100 * colSums(filter(Species_Yasmeen, .data$Class == 'c__')[8:25])/
colSums(Species_Yasmeen[8:25])
#
sort(unique(Species_Yasmeen$Order))
100 * colSums(filter(Species_Yasmeen, .data$Order == 'o__')[8:25])/
colSums(Species_Yasmeen[8:25])
sort(unique(Species_Yasmeen$Family))
100 * colSums(filter(Species_Yasmeen, .data$Family == 'f__')[8:25])/
colSums(Species_Yasmeen[8:25])
sort(unique(Species_Yasmeen$Genus))
100 * colSums(filter(Species_Yasmeen, .data$Genus == 'g__')[8:25])/
colSums(Species_Yasmeen[8:25])
sort(unique(Species_Yasmeen$Species))
100 * colSums(filter(Species_Yasmeen, .data$Species == 's__')[8:25])/
colSums(Species_Yasmeen[8:25])
}
#
# Thresholding ------------------------------------------------------------
Sample_Sum_PCOFGS <- function(
df = Species_Yasmeen, by = 'Phylum', threshold = .01) {
df_colsum <- data.frame()
iter_seq <- unique(df[,by])
for (iter_by in iter_seq) {
subdf <- df[df[by]==iter_by, ]
# print(iter_by)
# print(colSums(subdf[8:25]))
row_new <- colSums(subdf[8:25])
df_colsum <- rbind(df_colsum,
row_new)
}
df_colsum <- cbind(iter_seq, df_colsum)
dimnames(df_colsum) <- list(
iter_seq,
c(by, colnames(df)[8:25])
)
# Thresholding
COLSUM_Final <- colSums(df_colsum[2:19])
Other_rowindex <- rowSums((df_colsum[, 2:19]/COLSUM_Final) <= threshold)>17
Other <- colSums(df_colsum[Other_rowindex, 2:19])
df_colsum <- rbind(
df_colsum[!Other_rowindex, 2:19],
Other
)
iter_seq <- c(names(Other_rowindex[!Other_rowindex]), 'Other')
df_colsum <- cbind(iter_seq, df_colsum)
dimnames(df_colsum) <- list(
iter_seq,
c(by, colnames(df)[8:25])
)
return(df_colsum)
}
# Stacked BarPlot ---------------------------------------------------------
# May plot for Phylum, Class, Order, Family level
dim(Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Phylum', threshold = .008))
dim(Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Class', threshold = .0188))
dim(Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Order', threshold = .03))
dim(Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Family', threshold = .05))
if(1){
for (iter_i in 1:4) {
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
# df$index <- factor(df$index,
#                    levels = sort(levels(df$index), decreasing = T))
dfm <- reshape2::melt(df, id.var = c('index'))
#
assign(paste0('p_',cluster_by),
ggplot(dfm, aes(x = variable,
y = value,
fill = index)) +
geom_bar(stat = "identity", position = "fill") +
scale_y_continuous(labels = scales::percent_format(),
breaks = seq(0, 1, .2),
minor_breaks = seq(0, 1, .1)) +
scale_fill_brewer(palette = "Set3") +
labs(fill = paste0('(', LETTERS[iter_i], ') ', cluster_by)) +
# ggtitle(paste0('(', LETTERS[iter_i], ') ', cluster_by)) +
xlab('Condition') + ylab('Proportion') +
theme_bw() +
theme(axis.text.x = element_text(angle = 45, hjust = 1),
legend.position = 'top',
legend.title = element_text(face = "bold")
# legend.title='element_blank()'
) +
coord_flip())
}
if(0){
p_Phylum
ggsave('a_BarPlot_Phylum.eps', device = 'eps',
width = 9, height = 6)
p_Class
ggsave('b_BarPlot_Class.eps', device = 'eps',
width = 9, height = 6)
p_Order
ggsave('c_BarPlot_Order.eps', device = 'eps',
width = 9, height = 6)
p_Family
ggsave('d_BarPlot_Family.eps', device = 'eps',
width = 9, height = 6)
# four together
gridExtra::grid.arrange(p_Phylum, p_Class,
p_Order, p_Family, ncol = 2)
}
}
getwd()
p_Class
p_Phylum
ggsave('a_BarPlot_Phylum.eps', p_Phylum, device = 'eps',
width = 9, height = 6)
p_Class
ggsave('b_BarPlot_Class.eps', p_Class, device = 'eps',
width = 9, height = 6)
p_Order
ggsave('c_BarPlot_Order.eps', p_Order, device = 'eps',
width = 9, height = 6)
p_Family
ggsave('d_BarPlot_Family.eps', p_Family, device = 'eps',
width = 9, height = 6)
# four together
gridExtra::grid.arrange(p_Phylum, p_Class,
p_Order, p_Family, ncol = 2)
gridExtra::grid.arrange(p_Phylum, p_Class,
p_Order, p_Family, ncol = 2)
p_all <- gridExtra::grid.arrange(p_Phylum, p_Class,
p_Order, p_Family, ncol = 2)
ggsave('d_BarPlot_All.eps', p_all, device = 'eps',
width = 9, height = 6)
ggsave('BarPlot_All.eps', p_all, device = 'eps',
width = 9, height = 6)
p_all <- gridExtra::grid.arrange(p_Phylum, p_Class,
p_Order, p_Family, ncol = 2)
ggsave('BarPlot_All.eps', p_all, device = 'eps',
width = 16, height = 9)
df
head(df)
df
dim(df)
dim(Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Phylum', threshold = .008))
Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Phylum', threshold = .008)
clipr::write_clip(
Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Phylum', threshold = .008)
)
Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Phylum', threshold = .008),
Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Phylum', threshold = .008)
clipr::write_clip(
# Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Phylum', threshold = .008),
Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Class', threshold = .0188),
rownames = F
)
dfm
df
clipr::write_clip(
df
)
cluster_by <- 'Phylum'
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
clipr::write_clip(
df
)
clipr::write_clip(
df
)
df
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
iter_i
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
clipr::write_clip(
df
)
iter <- 1
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
source('~/.active-rstudio-document', echo=TRUE)
iter_i
iter_i <- 1
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
source('~/.active-rstudio-document', echo=TRUE)
iter_i <- 2
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
source('~/.active-rstudio-document', echo=TRUE)
iter_i
iter_i <- 3
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
source('~/.active-rstudio-document', echo=TRUE)
iter_i <- 4
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
source('~/.active-rstudio-document', echo=TRUE)
iter_i
iter_i <- 1
cluster_by <- c('Phylum', 'Class', 'Order', 'Family')[iter_i]
threshold <- c(.008, .0188, .03, .05)[iter_i]
#
df <- Sample_Sum_PCOFGS(df = Species_Yasmeen,
by = cluster_by,
threshold = threshold)
df <- data.frame(
index = gsub("^.*_", "", rownames(df)),
Ref = rowMeans(select(df, starts_with(('Ref')))),
A1 = rowMeans(select(df, starts_with(('A1')))),
B1 = rowMeans(select(df, starts_with(('B1')))),
B2 = rowMeans(select(df, starts_with(('B2')))),
A2 = rowMeans(select(df, starts_with(('A2'))))
)
df
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
dim(Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Family', threshold = .05))
dim(Sample_Sum_PCOFGS(df = Species_Yasmeen, by = 'Family', threshold = .01))
