}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
cex.cor = 1.5,
gap = .5, oma = rep(2,4))
# dev.off()
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
cex.cor = 1.5, cex = 1.5,
gap = .5, oma = rep(2,4))
# dev.off()
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
cex.cor = 1.5, cex = 1.1,
gap = .5, oma = rep(2,4))
# dev.off()
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4))
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
cex.cor = 1.5, cex = 1.1,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.1)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
cex.cor = 1.5,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
cex.cor = 1.5,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
cex.cor = 1.5, cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
# cex.cor = 1.5,
cex = 1.3,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
dev.off()
dev.off()
dev.off()
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1.5, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 3,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 1, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.5)
{
# svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
# dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 1.5)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
# Pairs Panel --------------------------------------------------------------
if(1){
source('/Users/chengt/Documents/R/MBR_Ecology/panelutils.R')
# Steady State Only, w/ wo condition 6
df <- MBR_Yasmeen[which(MBR_Yasmeen$SteadyStateIndicator==1),]
df <- df[which(df$Condition!=6),]
# my_cols <- RColorBrewer::brewer.pal(n = nlevels(df$Condition),
#                                     name = 'Dark2')
my_cols <- 1:length(levels(df$Condition))
my_cols <- my_cols[df$Condition]
#
# Sort Columns
df <- df[,c(
# "Date", "Condition",
"COD_in", "NH4N_in", "NO3N_in", "PO4P_in", "DO_in",
# "MLSS",
"MLVSS",
"COD_out", "NH4N_out", "NO3N_out", "PO4P_out", "DO_out"
)]
par(oma = rep(0,4), mar = rep(0,4), cex = 2)
{
svg(filename = 'pairs_panel_simplified.svg', width = 16, height = 12)
pairs(x = df,
upper.panel = panel.cor,
diag.panel = panel.hist,
lower.panel = panel.smooth,
cex.labels = 2, font.labels = 2,
# cex.cor = 1.5,
cex = 1.4,
gap = .5, oma = rep(2,4))
dev.off()
}
}
dev.off()
dev.off()
